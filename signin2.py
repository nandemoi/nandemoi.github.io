# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'signin2.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from datetime import datetime
import re, requests as rq
from getmac import get_mac_address
import webbrowser
from PyQt5 import QtCore, QtWidgets

SIGNINSRVR = 'http://elton-m1.local:4000/'

class MainWindow (QtWidgets.QMainWindow):
    def __init__(self):
        super().__init__()
    def closeEvent(self, event):
        event.ignore()

class Ui_MainWindow(object):
    def setupUi(self, HuangTech):
        HuangTech.setObjectName("HuangTech")
        HuangTech.resize(285, 252)        

        self.statusbar = QtWidgets.QStatusBar(HuangTech)
        self.statusbar.setObjectName("statusbar")
        HuangTech.setStatusBar(self.statusbar)

        self.mw = HuangTech
        HuangTech.setCentralWidget(self.makeLogin ())
        
        _translate = QtCore.QCoreApplication.translate
        HuangTech.setWindowTitle(_translate("HuangTech", "黃老師科技課程登入"))
        QtCore.QMetaObject.connectSlotsByName(HuangTech)

        self.timer = QtCore.QTimer(HuangTech)
        self.timer.timeout.connect(self.timer_event)
        self.timer.start(300000)    
        self.bYetLogIn = True

    def timer_event(self):
        if self.bYetLogIn:
            self.showMaximized()
        else:
            t = datetime.now().time()
            if (t.hour > 15 and t.minute > 10 and 15 < t.minute < 21) or 5 < t.minute < 11: # short circuit evaluation
                self.bYetLogIn = True
                # Todo: test timer accuracy
                self.showMaximized()

    def tryLogin(self):
        if self.chkid():
            try:
                resp = rq.post (SIGNINSRVR + 'applogin', data = {'username':self.login_id.text(), 'password':self.login_pw.text(), 'mac':get_mac_address() })
                if resp.status_code == 200:
                    nm = resp.json() ['name']
                    if nm is None:
                        self.statusbar.showMessage ('登入資料錯誤！請重新輸入...')
                        self.clear (self)
                    else:
                        self.mw.setCentralWidget(self.makeOn (self.login_id.text(), nm))
                        webbrowser.open (SIGNINSRVR + 'answers')
                        self.statusbar.showMessage (f"{nm}登入時間：{datetime.now().strftime(f'%H:%M')}")
                else:
                    self.statusbar.showMessage ('請通知老師：連不上伺服器！')
            except:
                self.statusbar.showMessage ('請通知老師：連不上伺服器！')
        else:
            self.statusbar.showMessage ('班級座號錯誤')
            self.id.setFocus()

    def doLogout(self):
        self.mw.setCentralWidget(self.makeLogin ())

    def makeLogin (self):
        self.centralwidget_login = QtWidgets.QWidget(self.mw)
        self.centralwidget_login.setObjectName("centralwidget_login")
        self.login_wgt = QtWidgets.QWidget(self.centralwidget_login)
        self.login_wgt.setGeometry(QtCore.QRect(20, 20, 241, 201))
        self.login_wgt.setObjectName("login_wgt")
        self.login_title = QtWidgets.QLabel(self.login_wgt)
        self.login_title.setGeometry(QtCore.QRect(50, 0, 131, 31))
        self.login_title.setObjectName("login_title")
        self.login_id_label = QtWidgets.QLabel(self.login_wgt)
        self.login_id_label.setGeometry(QtCore.QRect(50, 50, 121, 16))
        self.login_id_label.setObjectName("login_id_label")
        self.login_id = QtWidgets.QLineEdit(self.login_wgt)
        self.login_id.setGeometry(QtCore.QRect(50, 70, 113, 21))
        self.login_id.setObjectName("login_id")
        self.login_pw_label = QtWidgets.QLabel(self.login_wgt)
        self.login_pw_label.setGeometry(QtCore.QRect(50, 110, 81, 16))
        self.login_pw_label.setObjectName("login_pw_label")
        self.login_pw = QtWidgets.QLineEdit(self.login_wgt)
        self.login_pw.setGeometry(QtCore.QRect(50, 130, 113, 21))
        self.login_pw.setObjectName("login_pw")
        self.login_btn = QtWidgets.QPushButton(self.login_wgt)
        self.login_btn.setGeometry(QtCore.QRect(120, 170, 113, 32))
        self.login_btn.setObjectName("login_btn")
        self.clr_btn = QtWidgets.QPushButton(self.login_wgt)
        self.clr_btn.setGeometry(QtCore.QRect(0, 170, 113, 32))
        self.clr_btn.setObjectName("clr_btn")
        _translate = QtCore.QCoreApplication.translate
        self.login_id_label.setText(_translate("HuangTech", "班級座號 (共 5 碼)"))
        self.login_title.setText(_translate("HuangTech", "<html><head/><body><p><span style=\" font-size:18pt;\">黃老師科技課程</span></p></body></html>"))
        self.clr_btn.setText(_translate("HuangTech", "清除"))
        self.login_pw_label.setText(_translate("HuangTech", "學號末 4 碼"))
        self.login_btn.setText(_translate("HuangTech", "登入"))
        self.login_btn.clicked.connect (self.tryLogin)
        self.clr_btn.clicked.connect   (self.clear)
        self.login_pw.returnPressed.connect (self.tryLogin)
        self.login_id.returnPressed.connect (self.identer)
        self.bYetLogin = True
        self.login_id.setFocus ()
        self.statusbar.clearMessage ()
        return self.centralwidget_login

    def chkid (self):
        # if self.bYetLogin:
        if re.match ('^[1-3][0-9][0-9][0-4][0-9]$', self.login_id.text()):
            self.statusbar.clearMessage ()
            return True
        else:
            self.statusbar.showMessage ('班級座號錯誤')
            return False
            
    def identer (self):
        if self.chkid():
            self.login_pw.setFocus()
    
    def clear (self):
        self.login_pw.clear()
        self.login_id.clear()
        self.login_id.setFocus()
        
    def makeOn (self, id, name):
        self.centralwidget_on = QtWidgets.QWidget(self.mw)
        self.centralwidget_on.setObjectName("centralwidget_on")
        self.on_wgt = QtWidgets.QWidget(self.centralwidget_on)
        self.on_wgt.setGeometry(QtCore.QRect(20, 20, 241, 201))
        self.on_wgt.setObjectName("on_wgt")
        self.on_nm = QtWidgets.QLabel(self.on_wgt)
        self.on_nm.setGeometry(QtCore.QRect(70, 120, 121, 16))
        self.on_nm.setText("")
        self.on_nm.setObjectName("on_nm")
        self.logout_btn = QtWidgets.QPushButton(self.on_wgt)
        self.logout_btn.setGeometry(QtCore.QRect(60, 150, 113, 32))
        self.logout_btn.setObjectName("logout_btn")
        self.on_title = QtWidgets.QLabel(self.on_wgt)
        self.on_title.setGeometry(QtCore.QRect(60, 10, 131, 31))
        self.on_title.setObjectName("on_title")
        self.on_id_label = QtWidgets.QLabel(self.on_wgt)
        self.on_id_label.setGeometry(QtCore.QRect(70, 50, 121, 16))
        self.on_id_label.setObjectName("on_id_label")
        self.on_id = QtWidgets.QLabel(self.on_wgt)
        self.on_id.setGeometry(QtCore.QRect(70, 70, 121, 16))
        self.on_id.setText("")
        self.on_id.setObjectName("on_id")
        self.on_nm_label = QtWidgets.QLabel(self.on_wgt)
        self.on_nm_label.setGeometry(QtCore.QRect(70, 100, 121, 16))
        self.on_nm_label.setObjectName("on_nm_label")
        _translate = QtCore.QCoreApplication.translate
        self.logout_btn.setText(_translate("HuangTech", "登出"))
        self.on_title.setText(_translate("HuangTech", "<html><head/><body><p><span style=\" font-size:18pt;\">黃老師科技課程</span></p></body></html>"))
        self.on_id_label.setText(_translate("HuangTech", "班級座號"))
        self.on_id.setText(_translate("HuangTech", id))
        self.on_nm_label.setText(_translate("HuangTech", "姓名"))
        self.on_nm.setText(_translate("HuangTech", name))
        self.logout_btn.clicked.connect (self.doLogout)
        return self.centralwidget_on
        
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    HuangTech = MainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(HuangTech)
    HuangTech.show()
    sys.exit(app.exec_())
